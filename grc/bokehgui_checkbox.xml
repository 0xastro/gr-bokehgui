<?xml version="1.0"?>
<block>
	<name>Bokeh GUI Checkbox</name>
  <key>variable_bokehgui_checkbox</key>
  <category>[Bokeh GUI]/Bokeh GUI Widgets</category>
  <import>import bokehgui</import>
  <var_make>self.$(id) = $(id) = $value</var_make>
	<make>
#if not $label()
	#set $label = '"%s"'%$id
#end if
_$(id)_choices = {"[0]": $true, "[]": $false}
_$(id)_choices_inv = dict((_$(id)_choices[k],[0] if k == "[0]" else []) for k in _$(id)_choices.keys())
#if ($value() == $true() or $value() == $false())
self.$(id)_checkbox = bokehgui.checkbox(self.widget_lst, _$(id)_choices_inv[$value], $label+": ", inline = $inline)
#else
self.$(id)_checkbox = bokehgui.checkbox(self.widget_lst, _$(id)_choices_inv[$false], $label+": ", inline = $inline)
#end if
self.$(id)_checkbox.add_callback(
	lambda new: self.set_$(id)($(type.conv)(_$(id)_choices[str(new)])))
  </make>
  <callback>self.set_$(id)($value)</callback>
  <!--  <callback>self.$(id)_checkbox.set_value($value)</callback> -->
	<param>
		<name>Label</name>
		<key>label</key>
		<value></value>
		<type>string</type>
		<hide>#if $label() then 'none' else 'part'#</hide>
	</param>
	<param>
		<name>Type</name>
		<key>type</key>
		<value>bool</value>
		<type>enum</type>
		<hide>part</hide>
    <option>
      <name>Float</name>
      <key>real</key>
      <opt>conv:float</opt>
      <opt>str:str</opt>
    </option>
    <option>
      <name>Integer</name>
      <key>int</key>
      <opt>conv:int</opt>
      <opt>str:str</opt>
    </option>
    <option>
      <name>String</name>
      <key>string</key>
      <opt>conv:str</opt>
      <opt>str:str</opt>
    </option>
    <option>
      <name>Boolean</name>
      <key>bool</key>
      <opt>conv:bool</opt>
      <opt>str:str</opt>
    </option>
    <option>
      <name>Any</name>
      <key>raw</key>
      <opt>conv:eval</opt>
      <opt>str:repr</opt>
    </option>
	</param>
	<param>
		<name>Default Value</name>
		<key>value</key>
		<value>True</value>
		<type>$type</type>
	</param>
	<param>
		<name>True</name>
		<key>true</key>
		<value>True</value>
		<type>$type</type>
	</param>
	<param>
		<name>False</name>
		<key>false</key>
		<value>False</value>
		<type>$type</type>
	</param>
	<param>
		<name>Inline</name>
		<key>inline</key>
		<value>True</value>
		<type>enum</type>
		<hide>part</hide>
    <option>
      <name>True</name>
      <key>True</key>
    </option>
    <option>
      <name>False</name>
      <key>False</key>
    </option>
	</param>
</block>


