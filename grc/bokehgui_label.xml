<?xml version="1.0"?>
<block>
	<name>Bokeh GUI Label</name>
  <key>variable_bokehgui_label</key>
  <category>[Bokeh GUI]</category>
	<import>from gnuradio import eng_notation</import>
  <import>import bokehgui</import>
  <var_make>self.$(id)_val = $(id) = $value</var_make>
	<make>
#if not $label()
	#set $label = '"%s"'%$id
#end if
self.$(id) = bokehgui.label(self.widget_lst, str($(id)), $label+": ")
  </make>
	<callback>self.set_$(id)_val($value)</callback>
	<callback>self.$(id).set_value(str($value))</callback>
	<param>
		<name>Label</name>
		<key>label</key>
		<value></value>
		<type>string</type>
		<hide>#if $label() then 'none' else 'part'#</hide>
	</param>
	<param>
		<name>Type</name>
		<key>type</key>
		<value>int</value>
		<type>enum</type>
		<hide>part</hide>
    <option>
      <name>Float</name>
      <key>real</key>
      <opt>conv:eng_notation.str_to_num</opt>
      <opt>str:eng_notation.num_to_str</opt>
    </option>
    <option>
      <name>Integer</name>
      <key>int</key>
      <opt>conv:int</opt>
      <opt>str:str</opt>
    </option>
    <option>
      <name>String</name>
      <key>string</key>
      <opt>conv:str</opt>
      <opt>str:str</opt>
    </option>
    <option>
      <name>Boolean</name>
      <key>bool</key>
      <opt>conv:bool</opt>
      <opt>str:str</opt>
    </option>
    <option>
      <name>Any</name>
      <key>raw</key>
      <opt>conv:eval</opt>
      <opt>str:repr</opt>
    </option>
	</param>
	<param>
		<name>Default Value</name>
		<key>value</key>
		<value>0</value>
		<type>$type</type>
	</param>

	<doc>
This block creates a variable with a label widget for text. \
Leave the label blank to use the variable id as the label.
	</doc>
</block>

